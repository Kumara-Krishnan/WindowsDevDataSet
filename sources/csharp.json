{"baseUrl": "https://learn.microsoft.com/en-us/dotnet/csharp/", "data": {"items":[{"href":"tour-of-csharp/","toc_title":"C# documentation"},{"children":[{"href":"tour-of-csharp/overview","toc_title":"Tour of C#"},{"href":"tour-of-csharp/tips-for-java-developers","toc_title":"Learn C# for Java developers"},{"href":"tour-of-csharp/tips-for-javascript-developers","toc_title":"Learn C# for JavaScript developers"},{"href":"tour-of-csharp/tips-for-python-developers","toc_title":"Learn C# for Python developers"},{"href":"tour-of-csharp/strategy","toc_title":"C# language strategy"},{"children":[{"href":"tour-of-csharp/tutorials/","toc_title":"Choose your first lesson"},{"children":[{"href":"tour-of-csharp/tutorials/hello-world","toc_title":"Hello world"},{"href":"tour-of-csharp/tutorials/numbers-in-csharp","toc_title":"Numbers in C#"},{"href":"tour-of-csharp/tutorials/branches-and-loops","toc_title":"Branches and loops"},{"href":"tour-of-csharp/tutorials/list-collection","toc_title":"List collections"}],"toc_title":"Browser based tutorials"},{"children":[{"href":"tour-of-csharp/tutorials/local-environment","toc_title":"Set up your environment"},{"href":"tour-of-csharp/tutorials/numbers-in-csharp-local","toc_title":"Numbers in C#"},{"href":"tour-of-csharp/tutorials/branches-and-loops-local","toc_title":"Branches and loops"},{"href":"tour-of-csharp/tutorials/arrays-and-collections","toc_title":"List collections"}],"toc_title":"Work in your local environment"}],"toc_title":"Tutorials"}],"toc_title":"Get started"},{"children":[{"children":[{"href":"fundamentals/program-structure/","toc_title":"Overview"},{"href":"fundamentals/program-structure/main-command-line","toc_title":"Main method"},{"href":"fundamentals/program-structure/top-level-statements","toc_title":"Top-level statements"}],"toc_title":"Program structure"},{"children":[{"href":"fundamentals/types/","toc_title":"Overview"},{"href":"fundamentals/types/namespaces","toc_title":"Namespaces"},{"href":"fundamentals/types/classes","toc_title":"Classes"},{"href":"fundamentals/types/records","toc_title":"Records"},{"href":"fundamentals/types/interfaces","toc_title":"Interfaces"},{"href":"fundamentals/types/generics","toc_title":"Generics"},{"href":"fundamentals/types/anonymous-types","toc_title":"Anonymous Types"}],"toc_title":"Type system"},{"children":[{"href":"fundamentals/object-oriented/","toc_title":"Classes, structs, and records"},{"href":"fundamentals/object-oriented/objects","toc_title":"Objects"},{"href":"fundamentals/object-oriented/inheritance","toc_title":"Inheritance"},{"href":"fundamentals/object-oriented/polymorphism","toc_title":"Polymorphism"}],"toc_title":"Object-oriented programming"},{"children":[{"href":"fundamentals/functional/pattern-matching","toc_title":"Pattern matching"},{"href":"fundamentals/functional/discards","toc_title":"Discards"},{"href":"fundamentals/functional/deconstruct","toc_title":"Deconstructing tuples and other types"}],"toc_title":"Functional techniques"},{"children":[{"displayName":"exceptions","href":"fundamentals/exceptions/","toc_title":"Overview"},{"href":"fundamentals/exceptions/using-exceptions","toc_title":"Using exceptions"},{"href":"fundamentals/exceptions/exception-handling","toc_title":"Exception handling"},{"href":"fundamentals/exceptions/creating-and-throwing-exceptions","toc_title":"Creating and throwing exceptions"},{"href":"fundamentals/exceptions/compiler-generated-exceptions","toc_title":"Compiler-generated exceptions"}],"toc_title":"Exceptions and errors"},{"children":[{"href":"fundamentals/coding-style/identifier-names","toc_title":"C# identifier names"},{"href":"fundamentals/coding-style/coding-conventions","toc_title":"C# coding conventions"}],"toc_title":"Coding style"},{"children":[{"href":"fundamentals/tutorials/how-to-display-command-line-arguments","toc_title":"How to display command-line arguments"},{"href":"fundamentals/tutorials/classes","toc_title":"Introduction to classes"},{"href":"fundamentals/tutorials/oop","toc_title":"Object-oriented C#"},{"href":"fundamentals/tutorials/inheritance","toc_title":"Inheritance in C# and .NET"},{"displayName":"cast, is, as","href":"fundamentals/tutorials/safely-cast-using-pattern-matching-is-and-as-operators","toc_title":"Converting types"},{"href":"fundamentals/tutorials/pattern-matching","toc_title":"Build data-driven algorithms with pattern matching"},{"href":"fundamentals/exceptions/how-to-handle-an-exception-using-try-catch","toc_title":"How to handle an exception using try-catch"},{"href":"fundamentals/exceptions/how-to-execute-cleanup-code-using-finally","toc_title":"How to execute cleanup code using finally"}],"toc_title":"Tutorials"}],"toc_title":"Fundamentals"},{"children":[{"displayName":"what\u0027s New","href":"whats-new/csharp-13","toc_title":"C# 13"},{"href":"whats-new/breaking-changes/compiler breaking changes - dotnet 9","toc_title":"Breaking changes in C# 13"},{"displayName":"what\u0027s New","href":"whats-new/csharp-12","toc_title":"C# 12"},{"href":"whats-new/breaking-changes/compiler breaking changes - dotnet 8","toc_title":"Breaking changes in C# 12"},{"children":[{"displayName":"what\u0027s new","href":"whats-new/csharp-11","toc_title":"New features"},{"href":"whats-new/breaking-changes/compiler breaking changes - dotnet 7","toc_title":"Breaking changes in C# 11"}],"toc_title":"C# 11"},{"href":"whats-new/csharp-10","toc_title":"C# 10"},{"href":"whats-new/breaking-changes","toc_title":"Breaking changes in earlier versions"},{"href":"whats-new/csharp-version-history","toc_title":"C# Version History"},{"href":"whats-new/relationships-between-language-and-library","toc_title":"Relationships to .NET library"},{"href":"whats-new/version-update-considerations","toc_title":"Version compatibility"},{"children":[{"href":"whats-new/tutorials/primary-constructors","toc_title":"Explore primary constructors"},{"href":"whats-new/tutorials/static-virtual-interface-members","toc_title":"Explore static interface members"},{"href":"whats-new/tutorials/patterns-objects","toc_title":"Explore patterns in objects"},{"href":"whats-new/tutorials/interpolated-string-handler","toc_title":"Write a custom string interpolation handler"}],"toc_title":"Tutorials"}],"toc_title":"What\u0027s new in C#"},{"children":[{"href":"tutorials/records","toc_title":"Explore record types"},{"href":"tutorials/top-level-statements","toc_title":"Explore top-level statements"},{"href":"tutorials/ranges-indexes","toc_title":"Explore indexes and ranges"},{"href":"tutorials/nullable-reference-types","toc_title":"Work with nullable reference types"},{"href":"tutorials/exploration/interpolated-strings","toc_title":"Explore string interpolation - interactive"},{"href":"tutorials/exploration/interpolated-strings-local","toc_title":"Explore string interpolation - in your environment"},{"href":"tutorials/string-interpolation","toc_title":"Advanced scenarios for string Interpolation"},{"href":"tutorials/console-teleprompter","toc_title":"Console Application"},{"href":"tutorials/console-webapiclient","toc_title":"REST Client"},{"href":"tutorials/working-with-linq","toc_title":"Work with LINQ"}],"toc_title":"Tutorials"},{"children":[{"href":"linq/","toc_title":"Overview of LINQ"},{"children":[{"href":"linq/get-started/introduction-to-linq-queries","toc_title":"Introduction to LINQ queries"},{"href":"linq/get-started/query-expression-basics","toc_title":"Query expression basics"},{"href":"linq/get-started/write-linq-queries","toc_title":"Write LINQ queries"},{"href":"linq/get-started/type-relationships-in-linq-query-operations","toc_title":"Type relationships in LINQ query operations"},{"href":"linq/get-started/features-that-support-linq","toc_title":"C# features that support LINQ"},{"href":"linq/get-started/walkthrough-writing-queries-linq","toc_title":"Tutorial: Writing queries in C#"}],"toc_title":"Getting Started with LINQ in C#"},{"children":[{"href":"linq/standard-query-operators/","toc_title":"Overview"},{"href":"linq/standard-query-operators/filtering-data","toc_title":"Filter data"},{"href":"linq/standard-query-operators/projection-operations","toc_title":"Projection operations"},{"href":"linq/standard-query-operators/set-operations","toc_title":"Set operations"},{"href":"linq/standard-query-operators/sorting-data","toc_title":"Sort data"},{"href":"linq/standard-query-operators/quantifier-operations","toc_title":"Quantifier operations"},{"href":"linq/standard-query-operators/partitioning-data","toc_title":"Partition data"},{"href":"linq/standard-query-operators/converting-data-types","toc_title":"Convert data types"},{"href":"linq/standard-query-operators/join-operations","toc_title":"Join operations"},{"href":"linq/standard-query-operators/grouping-data","toc_title":"Group data"}],"toc_title":"Standard query operators"},{"children":[{"href":"linq/how-to-query-files-and-directories","toc_title":"How to: LINQ and file directories"},{"href":"linq/how-to-query-strings","toc_title":"How to: LINQ and strings"},{"href":"linq/how-to-query-collections","toc_title":"How to: LINQ and collections"},{"href":"linq/how-to-extend-linq","toc_title":"How to extend LINQ with new methods"},{"href":"linq/how-to-build-dynamic-queries","toc_title":"How to build dynamic queries at run time"}],"toc_title":"How-to articles"}],"toc_title":"Language-Integrated Query (LINQ)"},{"children":[{"displayName":"asynchronous programming, async, await","href":"asynchronous-programming/","toc_title":"Overview"},{"href":"asynchronous-programming/async-scenarios","toc_title":"Asynchronous programming scenarios"},{"href":"asynchronous-programming/task-asynchronous-programming-model","toc_title":"Task asynchronous programming model"},{"displayName":"Task, Task\u003CT\u003E, ValueTask, ValueTask\u003CT\u003E","href":"asynchronous-programming/async-return-types","toc_title":"Async return types"},{"href":"asynchronous-programming/start-multiple-async-tasks-and-process-them-as-they-complete","toc_title":"Process asynchronous tasks as they complete"},{"href":"asynchronous-programming/using-async-for-file-access","toc_title":"Asynchronous file access"},{"href":"asynchronous-programming/cancel-an-async-task-or-a-list-of-tasks","toc_title":"Cancel a list of tasks"},{"href":"asynchronous-programming/cancel-async-tasks-after-a-period-of-time","toc_title":"Cancel tasks after a period of time"},{"href":"asynchronous-programming/generate-consume-asynchronous-stream","toc_title":"Generate and consume asynchronous streams"}],"toc_title":"Asynchronous programming"},{"children":[{"href":"nullable-references","toc_title":"Nullable reference types"},{"href":"nullable-migration-strategies","toc_title":"Nullable reference migrations"},{"href":"methods","toc_title":"Methods"},{"href":"properties","toc_title":"Properties"},{"href":"indexers","toc_title":"Indexers"},{"href":"iterators","toc_title":"Iterators"},{"children":[{"href":"delegates-overview","toc_title":"Introduction to delegates"},{"href":"delegate-class","toc_title":"System.Delegate and the delegate keyword"},{"href":"delegates-strongly-typed","toc_title":"Strongly typed delegates"},{"href":"delegates-patterns","toc_title":"Common patterns for delegates"},{"href":"events-overview","toc_title":"Introduction to events"},{"href":"event-pattern","toc_title":"Standard .NET event patterns"},{"href":"modern-events","toc_title":"The updated .NET event pattern"},{"href":"distinguish-delegates-events","toc_title":"Distinguish delegates and events"}],"toc_title":"Delegates \u0026 events"},{"href":"versioning","toc_title":"Versioning"}],"toc_title":"C# concepts"},{"children":[{"displayName":"how to\u0027s","href":"how-to/","toc_title":"Article index"},{"href":"how-to/parse-strings-using-split","toc_title":"Split strings into substrings"},{"href":"how-to/concatenate-multiple-strings","toc_title":"Concatenate strings"},{"href":"how-to/search-strings","toc_title":"Search strings"},{"href":"how-to/modify-string-contents","toc_title":"Modify string contents"},{"href":"how-to/compare-strings","toc_title":"Compare strings"},{"href":"how-to/how-to-catch-a-non-cls-exception","toc_title":"How to catch a non-CLS exception"}],"toc_title":"How-to C# articles"},{"children":[{"children":[{"displayName":"attributes, reflection","href":"advanced-topics/reflection-and-attributes/","toc_title":"Overview"},{"href":"advanced-topics/reflection-and-attributes/creating-custom-attributes","toc_title":"Create custom attributes"},{"href":"advanced-topics/reflection-and-attributes/accessing-attributes-by-using-reflection","toc_title":"Access attributes using reflection"},{"href":"advanced-topics/reflection-and-attributes/how-to-create-a-c-cpp-union-by-using-attributes","toc_title":"How to create a C/C\u002B\u002B union by using attributes"},{"href":"advanced-topics/reflection-and-attributes/generics-and-attributes","toc_title":"Generics and attributes"},{"href":"advanced-topics/reflection-and-attributes/how-to-query-assembly-metadata-with-reflection-linq","toc_title":"How to query an assembly\u0027s metadata with reflection and LINQ"},{"href":"advanced-topics/reflection-and-attributes/generics-and-reflection","toc_title":"Generics and reflection"},{"href":"advanced-topics/reflection-and-attributes/attribute-tutorial","toc_title":"Tutorial: Define and use attributes"}],"toc_title":"Reflection and attributes"},{"children":[{"href":"advanced-topics/interface-implementation/default-interface-methods-versions","toc_title":"Safely update interfaces with default interface methods"},{"href":"advanced-topics/interface-implementation/mixins-with-default-interface-methods","toc_title":"Create mixin functionality with default interface methods"}],"toc_title":"Interface implementations"},{"children":[{"displayName":"expression trees","href":"advanced-topics/expression-trees/","toc_title":"Overview"},{"href":"advanced-topics/expression-trees/expression-trees-explained","toc_title":"Expression Trees Explained"},{"href":"advanced-topics/expression-trees/expression-classes","toc_title":"Framework Types Supporting Expression Trees"},{"href":"advanced-topics/expression-trees/expression-trees-execution","toc_title":"Execute expressions"},{"href":"advanced-topics/expression-trees/expression-trees-interpreting","toc_title":"Interpret expressions"},{"href":"advanced-topics/expression-trees/expression-trees-building","toc_title":"Build expressions"},{"href":"advanced-topics/expression-trees/expression-trees-translating","toc_title":"Translate expressions"},{"href":"advanced-topics/expression-trees/debugging-expression-trees-in-visual-studio","toc_title":"Debug expression trees in Visual Studio"},{"href":"advanced-topics/expression-trees/debugview-syntax","toc_title":"DebugView Syntax"},{"href":"../fundamentals/runtime-libraries/system-linq-expressions-expression-add","toc_title":"Supplemental API - Expression class add method"},{"href":"../fundamentals/runtime-libraries/system-linq-expressions-binaryexpression","toc_title":"Supplemental API - BinaryExpression class"}],"toc_title":"Expression trees"},{"children":[{"href":"advanced-topics/interop/","toc_title":"Overview"},{"href":"advanced-topics/interop/example-com-class","toc_title":"Example COM class"},{"href":"advanced-topics/interop/walkthrough-office-programming","toc_title":"Walkthrough: Office programming"},{"href":"advanced-topics/interop/how-to-use-platform-invoke-to-play-a-wave-file","toc_title":"Use platform invoke to play a WAV file"},{"href":"advanced-topics/interop/how-to-use-indexed-properties-in-com-interop-programming","toc_title":"Use indexed properties in COM interop programming"},{"href":"advanced-topics/interop/how-to-access-office-interop-objects","toc_title":"Access Office interop objects"},{"href":"advanced-topics/interop/how-to-use-named-and-optional-arguments-in-office-programming","toc_title":"Use named and optional arguments in Office programming"},{"href":"advanced-topics/interop/using-type-dynamic","toc_title":"Using type \u0027dynamic\u0027"},{"href":"advanced-topics/interop/walkthrough-creating-and-using-dynamic-objects","toc_title":"Walkthrough: Creating and using dynamic objects"}],"toc_title":"Native interoperability"},{"children":[{"href":"advanced-topics/performance/","toc_title":"Overview"},{"href":"advanced-topics/performance/ref-tutorial","toc_title":"Tutorial - reduce allocations"}],"toc_title":"Performance engineering"}],"toc_title":"Advanced topics"},{"children":[{"href":"roslyn-sdk/","toc_title":"The .NET Compiler Platform SDK (Roslyn APIs) overview"},{"href":"roslyn-sdk/compiler-api-model","toc_title":"Understand the compiler API model"},{"href":"roslyn-sdk/work-with-syntax","toc_title":"Work with syntax"},{"href":"roslyn-sdk/work-with-semantics","toc_title":"Work with semantics"},{"href":"roslyn-sdk/work-with-workspace","toc_title":"Work with a workspace"},{"href":"roslyn-sdk/syntax-visualizer","toc_title":"Explore code with the syntax visualizer"},{"href":"roslyn-sdk/source-generators-overview","toc_title":"Source Generators"},{"href":"roslyn-sdk/choosing-diagnostic-ids","toc_title":"Choose diagnostic IDs"},{"children":[{"href":"roslyn-sdk/get-started/syntax-analysis","toc_title":"Syntax analysis"},{"href":"roslyn-sdk/get-started/semantic-analysis","toc_title":"Semantic analysis"},{"href":"roslyn-sdk/get-started/syntax-transformation","toc_title":"Syntax Transformation"}],"toc_title":"Quick starts"},{"children":[{"href":"roslyn-sdk/tutorials/how-to-write-csharp-analyzer-code-fix","toc_title":"Build your first analyzer and code fix"}],"toc_title":"Tutorials"}],"toc_title":"The .NET Compiler Platform SDK (Roslyn APIs)"},{"children":[{"children":[{"displayName":"programming concepts","href":"programming-guide/concepts/","toc_title":"Overview"},{"children":[{"displayName":"covariance and contravariance","href":"programming-guide/concepts/covariance-contravariance/","toc_title":"Overview"},{"children":[{"href":"programming-guide/concepts/covariance-contravariance/creating-variant-generic-interfaces","toc_title":"Create Variant Generic Interfaces"},{"href":"programming-guide/concepts/covariance-contravariance/using-variance-in-interfaces-for-generic-collections","toc_title":"Use Variance in Interfaces for Generic Collections"}],"href":"programming-guide/concepts/covariance-contravariance/variance-in-generic-interfaces","toc_title":"Variance in Generic Interfaces"},{"children":[{"href":"programming-guide/concepts/covariance-contravariance/using-variance-in-delegates","toc_title":"Use Variance in Delegates"},{"href":"programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates","toc_title":"Use Variance for Func and Action Generic Delegates"}],"href":"programming-guide/concepts/covariance-contravariance/variance-in-delegates","toc_title":"Variance in Delegates"}],"toc_title":"Covariance and contravariance"},{"href":"programming-guide/concepts/iterators","toc_title":"Iterators"}],"toc_title":"Programming concepts"},{"children":[{"href":"programming-guide/statements-expressions-operators/statements","toc_title":"Statements"},{"href":"programming-guide/statements-expressions-operators/expression-bodied-members","toc_title":"Expression-bodied members"},{"children":[{"href":"programming-guide/statements-expressions-operators/equality-comparisons","toc_title":"Equality comparisons"},{"href":"programming-guide/statements-expressions-operators/how-to-define-value-equality-for-a-type","toc_title":"How to define value equality for a type"},{"href":"programming-guide/statements-expressions-operators/how-to-test-for-reference-equality-identity","toc_title":"How to test for reference equality (identity)"}],"toc_title":"Equality and equality comparisons"}],"toc_title":"Statements, expressions, and equality"},{"children":[{"href":"programming-guide/types/casting-and-type-conversions","toc_title":"Casting and Type Conversions"},{"href":"programming-guide/types/boxing-and-unboxing","toc_title":"Boxing and Unboxing"},{"href":"programming-guide/types/how-to-convert-a-byte-array-to-an-int","toc_title":"How to convert a byte array to an int"},{"href":"programming-guide/types/how-to-convert-a-string-to-a-number","toc_title":"How to convert a string to a number"},{"href":"programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types","toc_title":"How to convert between hexadecimal strings and numeric types"}],"toc_title":"Types"},{"children":[{"children":[{"href":"programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords","toc_title":"Versioning with the Override and New Keywords"},{"href":"programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords","toc_title":"Knowing When to Use Override and New Keywords"},{"href":"programming-guide/classes-and-structs/how-to-override-the-tostring-method","toc_title":"How to override the ToString method"}],"toc_title":"Polymorphism"},{"children":[{"href":"programming-guide/classes-and-structs/members","toc_title":"Members overview"},{"href":"programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members","toc_title":"Abstract and Sealed Classes and Class Members"},{"href":"programming-guide/classes-and-structs/static-classes-and-static-class-members","toc_title":"Static Classes and Static Class Members"},{"href":"programming-guide/classes-and-structs/access-modifiers","toc_title":"Access Modifiers"},{"href":"programming-guide/classes-and-structs/fields","toc_title":"Fields"},{"href":"programming-guide/classes-and-structs/constants","toc_title":"Constants"},{"href":"programming-guide/classes-and-structs/how-to-define-abstract-properties","toc_title":"How to define abstract properties"},{"href":"programming-guide/classes-and-structs/how-to-define-constants","toc_title":"How to define constants in C#"}],"toc_title":"Members"},{"children":[{"href":"programming-guide/classes-and-structs/properties","toc_title":"Properties overview"},{"href":"programming-guide/classes-and-structs/using-properties","toc_title":"Using Properties"},{"href":"programming-guide/classes-and-structs/interface-properties","toc_title":"Interface Properties"},{"href":"programming-guide/classes-and-structs/restricting-accessor-accessibility","toc_title":"Restricting Accessor Accessibility"},{"href":"programming-guide/classes-and-structs/how-to-declare-and-use-read-write-properties","toc_title":"How to declare and use read write properties"},{"href":"programming-guide/classes-and-structs/auto-implemented-properties","toc_title":"Auto-Implemented Properties"},{"href":"programming-guide/classes-and-structs/how-to-implement-a-lightweight-class-with-auto-implemented-properties","toc_title":"How to implement a lightweight class with auto-implemented properties"}],"toc_title":"Properties"},{"children":[{"href":"programming-guide/classes-and-structs/methods","toc_title":"Methods overview"},{"href":"programming-guide/classes-and-structs/local-functions","toc_title":"Local functions"},{"href":"programming-guide/classes-and-structs/implicitly-typed-local-variables","toc_title":"Implicitly Typed Local Variables"},{"href":"programming-guide/classes-and-structs/how-to-use-implicitly-typed-local-variables-and-arrays-in-a-query-expression","toc_title":"How to use implicitly typed local variables and arrays in a query expression"},{"href":"programming-guide/classes-and-structs/extension-methods","toc_title":"Extension Methods"},{"href":"programming-guide/classes-and-structs/how-to-implement-and-call-a-custom-extension-method","toc_title":"How to implement and call a custom extension method"},{"href":"programming-guide/classes-and-structs/how-to-create-a-new-method-for-an-enumeration","toc_title":"How to create a new method for an enumeration"},{"href":"programming-guide/classes-and-structs/named-and-optional-arguments","toc_title":"Named and Optional Arguments"}],"toc_title":"Methods"},{"children":[{"href":"programming-guide/classes-and-structs/constructors","toc_title":"Constructors overview"},{"href":"programming-guide/classes-and-structs/using-constructors","toc_title":"Using constructors"},{"href":"programming-guide/classes-and-structs/instance-constructors","toc_title":"Instance constructors"},{"href":"programming-guide/classes-and-structs/private-constructors","toc_title":"Private constructors"},{"href":"programming-guide/classes-and-structs/static-constructors","toc_title":"Static constructors"},{"href":"programming-guide/classes-and-structs/how-to-write-a-copy-constructor","toc_title":"How to write a copy constructor"}],"toc_title":"Constructors"},{"href":"programming-guide/classes-and-structs/finalizers","toc_title":"Finalizers"},{"href":"programming-guide/classes-and-structs/object-and-collection-initializers","toc_title":"Object and Collection Initializers"},{"href":"programming-guide/classes-and-structs/how-to-initialize-objects-by-using-an-object-initializer","toc_title":"How to initialize objects by using an object initializer"},{"href":"programming-guide/classes-and-structs/how-to-initialize-a-dictionary-with-a-collection-initializer","toc_title":"How to initialize a dictionary with a collection initializer"},{"href":"programming-guide/classes-and-structs/nested-types","toc_title":"Nested Types"},{"href":"programming-guide/classes-and-structs/partial-classes-and-methods","toc_title":"Partial Classes and Methods"},{"href":"programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query","toc_title":"How to return subsets of element properties in a query"}],"toc_title":"Classes, Structs, and Records"},{"children":[{"href":"programming-guide/interfaces/explicit-interface-implementation","toc_title":"Explicit Interface Implementation"},{"href":"programming-guide/interfaces/how-to-explicitly-implement-interface-members","toc_title":"How to explicitly implement interface members"},{"href":"programming-guide/interfaces/how-to-explicitly-implement-members-of-two-interfaces","toc_title":"How to explicitly implement members of two interfaces"}],"toc_title":"Interfaces"},{"children":[{"displayName":"delegates","href":"programming-guide/delegates/","toc_title":"Overview"},{"href":"programming-guide/delegates/using-delegates","toc_title":"Using Delegates"},{"href":"programming-guide/delegates/delegates-with-named-vs-anonymous-methods","toc_title":"Delegates with Named vs. Anonymous Methods"},{"href":"programming-guide/delegates/how-to-combine-delegates-multicast-delegates","toc_title":"How to combine delegates (Multicast Delegates) (C# Programming Guide)"},{"href":"programming-guide/delegates/how-to-declare-instantiate-and-use-a-delegate","toc_title":"How to declare, instantiate, and use a delegate"}],"toc_title":"Delegates"},{"children":[{"href":"programming-guide/strings/","toc_title":"Programming with strings"},{"href":"programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value","toc_title":"How to determine whether a string represents a numeric value"}],"toc_title":"Strings"},{"children":[{"displayName":"indexers","href":"programming-guide/indexers/","toc_title":"Overview"},{"href":"programming-guide/indexers/using-indexers","toc_title":"Using Indexers"},{"href":"programming-guide/indexers/indexers-in-interfaces","toc_title":"Indexers in Interfaces"},{"href":"programming-guide/indexers/comparison-between-properties-and-indexers","toc_title":"Comparison Between Properties and Indexers"}],"toc_title":"Indexers"},{"children":[{"displayName":"events","href":"programming-guide/events/","toc_title":"Overview"},{"href":"programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events","toc_title":"How to subscribe to and unsubscribe from events"},{"href":"programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines","toc_title":"How to publish events that conform to .NET Guidelines"},{"href":"programming-guide/events/how-to-raise-base-class-events-in-derived-classes","toc_title":"How to raise base class events in derived classes"},{"href":"programming-guide/events/how-to-implement-interface-events","toc_title":"How to implement interface events"},{"href":"programming-guide/events/how-to-implement-custom-event-accessors","toc_title":"How to implement custom event accessors"}],"toc_title":"Events"},{"children":[{"href":"programming-guide/generics/generic-type-parameters","toc_title":"Generic Type Parameters"},{"href":"programming-guide/generics/constraints-on-type-parameters","toc_title":"Constraints on Type Parameters"},{"href":"programming-guide/generics/generic-classes","toc_title":"Generic Classes"},{"href":"programming-guide/generics/generic-interfaces","toc_title":"Generic Interfaces"},{"href":"programming-guide/generics/generic-methods","toc_title":"Generic Methods"},{"href":"programming-guide/generics/generics-and-arrays","toc_title":"Generics and Arrays"},{"href":"programming-guide/generics/generic-delegates","toc_title":"Generic Delegates"},{"href":"programming-guide/generics/differences-between-cpp-templates-and-csharp-generics","toc_title":"Differences Between C\u002B\u002B Templates and C# Generics"},{"href":"programming-guide/generics/generics-in-the-run-time","toc_title":"Generics in the Run Time"}],"toc_title":"Generics"}],"toc_title":"C# programming guide"},{"children":[{"href":"language-reference/","toc_title":"C# language reference"},{"href":"specification/","toc_title":"C# specification"}],"toc_title":"Other C# documentation"}],"metadata":{"_displayLangs":["csharp"],"apiPlatform":"dotnet","author":"billwagner","breadcrumb_path":"/dotnet/breadcrumb/toc.json","count_of_node_with_href":258,"dev_langs":["csharp"],"featureFlags":["enable_uhf_ppe"],"feedback_github_repo":"dotnet/docs","feedback_product_url":"https://aka.ms/feedback/report?space=61","feedback_system":"OpenSource","ms.author":"wiwagn","ms.devlang":"csharp","ms.service":"dotnet-csharp","ms.topic":"conceptual","open_source_feedback_contributorGuideUrl":"https://learn.microsoft.com/contribute/content/dotnet/dotnet-contribute","open_source_feedback_issueTitle":"","open_source_feedback_issueUrl":"https://github.com/dotnet/docs/issues/new?template=z-customer-feedback.yml","open_source_feedback_productLogoDarkUrl":"https://learn.microsoft.com/media/logos/logo_net.svg","open_source_feedback_productLogoLightUrl":"https://learn.microsoft.com/media/logos/logo_net.svg","open_source_feedback_productName":".NET","open_to_public_contributors":true,"pdf_absolute_path":"/dotnet/opbuildpdf/csharp/toc.pdf","searchScope":[".NET"],"show_latex":true,"social_image_url":"/dotnet/media/logo_csharp.png","uhfHeaderId":"MSDocsHeader-DotNetCSharp"}}}